version: '3.9'

services:
  
  core:
    build: 
      context: ../
      dockerfile: './dtcc-model/docker/Dockerfile'
      target: dev
    working_dir: ${WORKING_DIR}
    container_name: dtcc-core
    image: dtcc-core-image
    stdin_open: true 
    tty: true 
    volumes:
      - ../:${WORKING_DIR}
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_PTRACE
    ports:
      - 54321:54321
      - 8000:8000
    networks:
        - dtcc-core-network
    

  redis:
    image: redis:latest
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis:/var/lib/redis
      - redis-config:/usr/local/etc/redis/redis.conf
    ports:
      - ${REDIS_PORT}:6379
    links:
      - redis-commander
    networks:
        - dtcc-core-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      REDIS_HOSTS: redis
      REDIS_HOST: redis
      REDIS_PORT: redis:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      HTTP_USER: dtcc
      HTTP_PASSWORD: dtcc
    ports:
      - 8081:8081
    networks:
        - dtcc-core-network
    

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - dtcc-core-network

volumes:
  redis_data:
    driver: local
  redis:
  redis-config:

networks:
  dtcc-core-network:
    driver: bridge




  

